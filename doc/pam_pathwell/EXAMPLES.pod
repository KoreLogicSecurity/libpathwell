
=head1 EXAMPLES

The below examples show changes to /etc/pam.d/ files to enable
components or modes of the PathWell PAM module.  Note that different
Linux distributions arrange the pam.d/ files differently.  In general,
the file to be changed will be the one that contains lines that begin
with 'password'.  Those might be in /etc/pam.d/common-password,
/etc/pam.d/system-auth, or some other file.  See README.PAM from the
source distribution for notes about some specific distributions.

In these examples, lines consisting of just '...' indicate other
optional and varied entries that might already exist.  Lines ending
with '...' indicate lines that are expected to exist, whose options
are not relevant to configuring PathWell and should not need to be
altered.

=head2 Example 1. Monitor Topology Usage

This example demonstrates how to configure /etc/pam.d/ entries to
monitor topology usage in a stacked configuration.  In this
configuration, PathWell will record the use of different password
topologies: for instance, if an organization wished to evaluate how
prevalent topology-bias is among its user population.

The key parts to focus on are:

Set the pam_pathwell control flag to 'optional', so that
pam_pathwell's 'mode=monitor' call will never cause a password to be
rejected.

Ensure that pam_pathwell is stacked after pam_unix, so that it is
called only when a user's proposed new password has been accepted.

Ensure that the B<use_authtok> option is set, so that the password
the user has already entered is passed to pam_pathwell.

    password required pam_unix.so ...
    password optional pam_pathwell.so mode=monitor use_authtok
    ...

=head2 Example 2. Enforce Topology Usage

This example demonstrates how to configure /etc/pam.d/ entries to
enforce topology controls.  Note that when Monitor is not also
enabled, there is no living history of topologies used within an
organization.  Therefore, enforcement without monitoring can only
reject candidate passwords using static criteria, such as a blacklist.

The key parts to focus on are:

Set the pam_pathwell control flag to 'required', so that a failure to
satisfy PathWell enforcement means the password will be rejected.

Ensure that pam_pathwell is stacked after any 'required' modules that
perform conventional strength checks, so that the user's candidate
password must pass those checks first.

Ensure that the B<use_authtok> option is set, so that the password the
user has already entered is passed to pam_pathwell.

    password required pam_cracklib.so ...
    password required pam_pathwell.so mode=enforce use_authtok blacklist=yes minlen=8 minlev=3 maxuse=1
    password required pam_unix.so ...
    ...

=head2 Example 3. Monitor and Enforce Topology Usage

This example demonstrates how to configure /etc/pam.d/ entries to
monitor and enforce topology usage in a stacked configuration.  First
a user's candidate password topology will be checked against the
PathWell database (enforcement), and then, if it passes and the user's
password is successfully updated, the database will be updated to
reflect that the usage count for the new topology has increased
(monitor).

The key parts to focus on are:

Ensure that a call to 'mode=enforce' is set as 'required', following
at least one strength-enforcing 'required' line.

Ensure that a call to 'mode=monitor' is set as 'optional', after all
'required' lines.

Ensure that the B<use_authtok option> is set for both pam_pathwell
invokations, so that the password the user has already entered is
passed to pam_pathwell.

    password required pam_cracklib.so ...
    password required pam_pathwell.so mode=enforce use_authtok blacklist minlen=8 minlev=3
    password required pam_unix.so use_authtok ...
    password optional pam_pathwell.so mode=monitor use_authtok
    ...

